[package]
name = "indracore-service"
version = "0.4.0"
authors = ["Selendra <info@selendra.org>"]
edition = "2018"

[dependencies]
# Substrate Client
sc-authority-discovery = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
babe = { package = "sc-consensus-babe", git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
grandpa = { package = "sc-finality-grandpa", git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
sc-block-builder = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
sc-chain-spec = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
sc-client-api = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
sc-client-db = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
sc-consensus = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
sc-consensus-slots = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
sc-executor = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
sc-finality-grandpa-warp-sync = { git = "https://github.com/selendra/substrate", branch = "v2.0.4", optional = true }
sc-network = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
sc-transaction-pool = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
sc-keystore = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
service = { package = "sc-service", git = "https://github.com/selendra/substrate", branch = "v2.0.4", default-features = false }
telemetry = { package = "sc-telemetry", git = "https://github.com/selendra/substrate", branch = "v2.0.4" }

# Substrate Primitives
sp-authority-discovery = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
babe-primitives = { package = "sp-consensus-babe", git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
consensus_common = { package = "sp-consensus", git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
grandpa_primitives = { package = "sp-finality-grandpa", git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
inherents = { package = "sp-inherents", git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
sp-api = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
sp-block-builder = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
sp-blockchain = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
sp-core = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
sp-io = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
sp-keystore = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
sp-offchain = { package = "sp-offchain", git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
sp-runtime = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
sp-session = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
sp-storage = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
sp-transaction-pool = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
sp-trie = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
sp-state-machine = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }

# Substrate Pallets
pallet-babe = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
pallet-im-online = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
pallet-staking = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
pallet-transaction-payment-rpc-runtime-api = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }

# Substrate Other
frame-benchmarking = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
frame-system-rpc-runtime-api = { git = "https://github.com/selendra/substrate", branch = "v2.0.4" }
prometheus-endpoint = { package = "substrate-prometheus-endpoint", git = "https://github.com/selendra/substrate", branch = "v2.0.4" }

# External Crates
futures = "0.3.12"
hex-literal = "0.3.1"
tracing = "0.1.25"
serde = { version = "1.0.123", features = ["derive"] }
thiserror = "1.0.23"

# Indracore
indracore-node-core-proposer = { path = "../modules/node/core/proposer" }
indracore-overseer = { path = "../modules/node/overseer" }
indracore-parachain = { path = "../modules/parachain" }
indracore-primitives = { path = "../primitives" }
indracore-rpc = { path = "../modules/rpc" }
indracore-subsystem = { package = "indracore-node-subsystem", path = "../modules/node/subsystem" }
indracore-node-subsystem-util = { path = "../modules/node/subsystem-util" }
indracore-runtime-parachains = { path = "../modules/parachain/runtime-parachains" }

# Indracore Runtimes
indracore-runtime = { path = "../runtime/indracore" }

# Indracore Subsystems
indracore-availability-bitfield-distribution = { path = "../modules/node/network/bitfield-distribution", optional = true }
indracore-availability-distribution = { path = "../modules/node/network/availability-distribution", optional = true }
indracore-availability-recovery = { path = "../modules/node/network/availability-recovery", optional = true }
indracore-collator-protocol = { path = "../modules/node/network/collator-protocol", optional = true }
indracore-gossip-support = { path = "../modules/node/network/gossip-support", optional = true }
indracore-network-bridge = { path = "../modules/node/network/bridge", optional = true }
indracore-node-collation-generation = { path = "../modules/node/collation-generation", optional = true }
indracore-node-core-av-store = { path = "../modules/node/core/av-store", optional = true }
indracore-node-core-backing = { path = "../modules/node/core/backing", optional = true }
indracore-node-core-bitfield-signing = { path = "../modules/node/core/bitfield-signing", optional = true }
indracore-node-core-candidate-selection = { path = "../modules/node/core/candidate-selection", optional = true }
indracore-node-core-candidate-validation = { path = "../modules/node/core/candidate-validation", optional = true }
indracore-node-core-chain-api = { path = "../modules/node/core/chain-api", optional = true }
indracore-node-core-provisioner = { path = "../modules/node/core/provisioner", optional = true }
indracore-node-core-runtime-api = { path = "../modules/node/core/runtime-api", optional = true }
indracore-pov-distribution = { path = "../modules/node/network/pov-distribution", optional = true }
indracore-statement-distribution = { path = "../modules/node/network/statement-distribution", optional = true }
indracore-approval-distribution = { path = "../modules/node/network/approval-distribution", optional = true }
indracore-node-core-approval-voting = { path = "../modules/node/core/approval-voting", optional = true }

[dev-dependencies]
env_logger = "0.8.2"

[features]
default = ["db", "full-node"]
db = ["service/db"]
full-node = [
	"indracore-node-core-av-store",
	"indracore-node-core-approval-voting",
	"sc-finality-grandpa-warp-sync"
]

runtime-benchmarks = [
	"indracore-runtime/runtime-benchmarks",
]
try-runtime = [
	"indracore-runtime/try-runtime",
]

real-overseer = [
	"indracore-availability-bitfield-distribution",
	"indracore-availability-distribution",
	"indracore-availability-recovery",
	"indracore-collator-protocol",
	"indracore-gossip-support",
	"indracore-network-bridge",
	"indracore-node-collation-generation",
	"indracore-node-core-backing",
	"indracore-node-core-bitfield-signing",
	"indracore-node-core-candidate-selection",
	"indracore-node-core-candidate-validation",
	"indracore-node-core-chain-api",
	"indracore-node-core-provisioner",
	"indracore-node-core-runtime-api",
	"indracore-pov-distribution",
	"indracore-statement-distribution",
	"indracore-approval-distribution",
]
